$containerHeight: 50px;
$underlineHeight: 3px;

$loadingTransitionDelayInitial: 300ms;
$loadingTransitionDelay: 100ms;
$loadingTransitionDuration: 150ms;

.container {
    --item-width: 5rem;
    --container-height: 5rem;

    @media (max-width: 780px) {
        --item-width: 4.5rem;
        --container-height: 4.5rem;
    }

    position: sticky;
    inset-inline: 0;
    inset-block-start: 0;

    display: flex;
    flex-direction: row;
    flex-shrink: 0;

    width: 100%;
    height: var(--container-height);

    background-color: hsla(0, 0%, 100%, 0.04);

    color: var(--color, var(--global-color));

    backdrop-filter: blur(0.4rem);

    box-shadow: inset 0 0 100vmax 0 hsla(0, 0%, 100%, 0.01),
        0 0 1.2rem 0 hsla(0, 0%, 75%, 0.01);

    transition-property: all, box-shadow;
    transition-duration: 200ms, 150ms;
    transition-timing-function: ease-out, ease-out;

    z-index: 10001;

    /** outline */
    &:before {
        content: "";

        position: absolute;
        inset: 0;

        width: 100%;

        border-block-end: 0.1px solid hsla(0, 0%, 70%, 0.05);
    }

    * {
        transition: all 150ms ease-out;
    }

    > *:not(.route, .indicator, .tooltip, .subwindow, .underlay, .expander) {
        position: relative;

        &:before {
            --background: var(--color-yellow);

            content: "";

            position: absolute;
            inset-inline: 0;
            inset-block-start: 100%;

            width: 100%;
            height: $underlineHeight;

            @media (hover: hover) {
                width: 0;
            }

            background-color: var(--background);

            box-shadow: 0 0 1rem 0.1rem var(--background);

            transition: all 150ms ease-out;

            pointer-events: none;
            user-select: none;
        }

        @media (hover: hover) {
            &:hover:before {
                --background: var(--color-yellow);

                width: 100%;
            }
        }

        &[data-activated="true"] {
            &:before {
                width: 100%;

                --background: var(--color-green);
            }
        }

        &:active:before {
            --background: var(--color-green-dark);
        }
    }

    *:is(.logo, .hamburger, .link) {
        background-color: transparent;

        @media (hover: hover) {
            &:hover {
                backdrop-filter: blur(0.3rem) invert(0.1);
            }
        }

        &:active {
            backdrop-filter: blur(0.3rem) invert(0.15);
        }

        &[data-activated="true"] {
            backdrop-filter: blur(0.3rem) invert(0.05);
        }
    }

    .expander {
        flex-grow: 1;

        height: 100%;

        order: 3;
    }

    .indicator {
        position: absolute;
        inset-block-start: 100%;

        height: $underlineHeight;

        background-color: var(--color, var(--global-color));

        box-shadow: 0 0 1rem 0.1rem var(--color, var(--global-color));

        transition: all 0.2s cubic-bezier(0.25, 1, 0.5, 1);

        z-index: 6;
    }

    .image {
        position: relative;

        height: 3.5rem;
        width: 3.5rem;

        @media (max-width: 780px) {
            width: 3rem;
            height: 3rem;
        }

        border-radius: 50%;

        overflow: hidden;
    }

    .logo {
        order: 1;

        display: flex;

        place-items: center;
        place-content: center;

        padding: 0.75rem;

        min-width: var(--item-width);

        user-select: none;

        .text {
            margin-inline-start: 0.5rem;

            font-family: var(--font-secondary);
            font-weight: 900;

            text-transform: capitalize;

            @media (max-width: 780px) {
                display: none;
            }
        }
    }

    .route {
        order: 2;
    }

    .link {
        display: inline-flex;

        place-items: center;
        place-content: center;

        height: 100%;
        width: var(--item-width);

        background-color: transparent;

        color: var(--route-color, var(--global-color));

        i {
            font-size: 2rem;

            pointer-events: none;
            user-select: none;
        }

        &[data-activated="true"] {
            background-color: transparent;

            color: var(--route-color-active, var(--global-color)) !important;

            backdrop-filter: unset;

            i,
            i:after,
            i:before {
                text-shadow: 0 0 1rem rgb(194, 224, 255);
            }

            @media (hover: hover) {
                &:hover {
                    backdrop-filter: unset;
                }
            }
        }
    }

    .tooltip {
        position: absolute;
        inset-block-start: 110%;

        padding: 0.25em 0.5em;

        transition: all 150ms cubic-bezier(0.165, 0.84, 0.44, 1);

        user-select: none;

        pointer-events: none;

        background-color: hsla(0, 0%, 100%, 0.04);

        color: var(--color, var(--global-color));

        backdrop-filter: blur(0.4rem);

        border: 0.1px solid hsla(0, 0%, 70%, 0.05);

        box-shadow: inset 0 0 100vmax 0 hsla(0, 0%, 100%, 0.01);

        border-radius: 0.4em;

        .title {
            font-family: var(--font-secondary);
            font-weight: 900;
            font-size: 1.8rem;
        }

        .description {
            font-family: var(--font-secondary);
            font-size: 1.4rem;
        }
    }

    .hamburger {
        --container-height: 0.3rem;
        --border-radius: 2.5em;

        order: 6;

        width: var(--item-width);
        height: 100%;

        padding: 0.7rem;

        display: flex;
        flex-direction: column;

        place-items: left;
        place-content: center space-around;

        scrollbar-width: none;

        &::-webkit-scrollbar {
            display: none;
        }

        div {
            height: var(--container-height);

            border-radius: var(--border-radius);

            background-color: var(--global-color);

            &:nth-child(1) {
                width: 100%;
            }

            &:nth-child(2) {
                transform-origin: center center;

                width: 75%;
            }

            &:nth-child(3) {
                width: 50%;
            }
        }

        &[data-activated="true"] {
            background-color: var(--item-background-color-activated);

            place-content: center;

            div {
                background-color: deeppink;

                &:nth-child(1) {
                    width: 100%;

                    transform-origin: center center;

                    translate: 0 calc(var(--container-height));
                    rotate: 45deg;
                }

                &:nth-child(2) {
                    width: 100%;

                    scale: 120%;

                    opacity: 0;
                }

                &:nth-child(3) {
                    width: 100%;

                    transform-origin: center;

                    translate: 0 calc(var(--container-height) * -1);
                    rotate: -45deg;
                }
            }

            @media (hover: hover) {
                &:hover {
                    background-color: var(--item-background-color-hover);

                    div {
                        &:nth-child(1) {
                            width: 100%;

                            scale: 75%;
                        }

                        &:nth-child(3) {
                            width: 100%;

                            scale: 75%;
                        }
                    }
                }
            }

            &:active {
                background-color: var(--item-background-color-active);
            }
        }

        @media (hover: hover) {
            &:hover {
                background-color: var(--item-background-color-hover);

                div {
                    &:nth-child(3) {
                        width: 100%;
                    }

                    &:nth-child(1) {
                        width: 50%;
                    }
                }
            }
        }

        &:active {
            background-color: var(--item-background-color-active);
        }
    }

    .button,
    .subwindow {
        position: relative;

        order: 4;

        min-width: var(--item-width);

        border-radius: 0;

        i {
            font-size: 1.3em;
            font-weight: bold;
        }

        .text {
            display: inline-block;
        }

        filter: brightness(100%);

        * {
            filter: brightness(100%);
        }

        @media (max-width: 780px) {
            place-content: center;
            place-items: center;

            padding: 0;

            i {
                margin: 0;
            }

            .text {
                display: none;
            }
        }

        &:active {
            scale: 1;

            filter: brightness(1.25);
        }
    }

    .button {
        &[data-activated="false"] {
            filter: brightness(70%);

            @media (hover: hover) {
                &:hover {
                    filter: brightness(80%);
                }
            }

            &:active {
                filter: brightness(90%);
            }
        }
    }

    .subwindow {
        order: 5;

        position: relative;

        z-index: -2;

        .content {
            position: absolute;
            inset-block-start: 100%;

            background-color: var(--global-background-color-deep);

            color: var(--global-color);

            height: 0;
            max-height: calc(100vh - $containerHeight);
            max-width: 100vw;
            width: max-content;

            border-bottom-width: 0;
            border-bottom-style: solid;

            overflow: hidden;

            box-sizing: border-box;

            pointer-events: all;

            .inside {
                padding: 1rem;

                pointer-events: all;
                user-select: all;

                font-size: 1em;
                font-family: var(--font-primary);
                font-weight: normal;
            }

            z-index: 3;

            &[data-align="right"] {
                inset-inline-end: 0;
            }

            &[data-align="left"] {
                inset-inline-start: 0;
            }

            &[data-align="full"] {
                margin: 0;
            }
        }

        &[data-activated="true"] {
            z-index: 1;

            .content {
                height: max-content;

                border-bottom-width: 3px;
            }
        }

        &:active {
            .content {
                filter: brightness(0.8);
            }
        }
    }

    .underlay {
        position: absolute;
        inset-block-start: 0;
        inset-inline: 0;

        height: 100vh;
        width: 100%;

        pointer-events: none;

        z-index: -1;
    }

    &[data-underlay="true"] {
        .underlay {
            pointer-events: all;
        }
    }

    &[data-hide="true"] {
        height: 0;

        box-shadow: 0 0 0 0 transparent;

        *:not(.indicator) {
            opacity: 0;
        }
    }
}

.loading {
    display: flex;

    position: absolute;
    inset: 0;

    width: 100%;
    height: 100%;

    z-index: 10003;

    overflow: hidden;

    pointer-events: none;
    user-select: none;

    --transition-delay-initial: $loadingTransitionDelayInitial;
    --transition-delay: $loadingTransitionDelay;
    --transition-duration: $loadingTransitionDuration;

    --animation-duration: 1s;

    span {
        position: absolute;
        inset-block: 0;

        height: 100%;
        width: 25%;

        z-index: 9;

        translate: 0 -100%;

        transition-property: translate;
        transition-duration: $loadingTransitionDuration;
        transition-timing-function: cubic-bezier(0.47, 0, 0.745, 0.715);
        transition-delay: 0;

        animation-name: popping;
        animation-duration: var(--animation-duration);
        animation-iteration-count: infinite;
        animation-play-state: paused;

        &:nth-child(1) {
            left: 0;

            background-color: #70d6ff;

            animation-delay: $loadingTransitionDelay * 0;

            transition-delay: $loadingTransitionDelay * 0;

            z-index: 4;
        }

        &:nth-child(2) {
            left: 25%;

            background-color: #ff70a6;

            animation-delay: $loadingTransitionDelay * 1;

            transition-delay: $loadingTransitionDelay * 1;

            z-index: 3;
        }

        &:nth-child(3) {
            left: 50%;

            background-color: #ff9770;

            animation-delay: $loadingTransitionDelay * 2;

            transition-delay: $loadingTransitionDelay * 2;

            z-index: 2;
        }

        &:nth-child(4) {
            left: 75%;

            background-color: #ffd670;

            animation-delay: $loadingTransitionDelay * 3;

            transition-delay: $loadingTransitionDelay * 3;

            z-index: 1;
        }
    }

    &[data-loading="true"] {
        pointer-events: all;
        user-select: all;

        span {
            animation-play-state: running;

            translate: 0 0;

            &:nth-child(1) {
                transition-delay: $loadingTransitionDelayInitial +
                    $loadingTransitionDelay * 0;
            }

            &:nth-child(2) {
                transition-delay: $loadingTransitionDelayInitial +
                    $loadingTransitionDelay * 1;
            }

            &:nth-child(3) {
                transition-delay: $loadingTransitionDelayInitial +
                    $loadingTransitionDelay * 2;
            }

            &:nth-child(4) {
                transition-delay: $loadingTransitionDelayInitial +
                    $loadingTransitionDelay * 3;
            }
        }
    }
}

@keyframes popping {
    50% {
        scale: 1.5 1;
    }
}

:export {
    containerHeight: $containerHeight;

    loadingTransitionDelayInitial: $loadingTransitionDelayInitial;
    loadingTransitionDelay: $loadingTransitionDelay;
    loadingTransitionDuration: $loadingTransitionDuration;
}
