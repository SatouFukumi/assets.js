.container {
    position: absolute;
    inset: 0;

    width: 100%;
    height: 100;

    border-radius: inherit;

    pointer-events: none;

    overflow: hidden;

    z-index: -1;

    transition: 200ms background-color ease-out;


    .triangle {
        clip-path: polygon(50% 0, 0% 100%, 100% 100%);
    }


    .hexagon {
        clip-path: polygon(25% 6%, 75% 6%, 100% 50%, 75% 94%, 25% 94%, 0% 50%);
    }


    .triangle,
    .hexagon {
        position: absolute;
        top: 100%;

        min-width: 70px;
        min-height: 70px;
        width: var(--size);
        height: var(--size);

        transition: 200ms background-color ease-out;

        animation-name: glasium-shape;
        animation-timing-function: linear;
        animation-iteration-count: infinite;

        will-change: transform, animation-delay, animation-duration;

        transform: translateY(0%) rotate(0deg);
    }
}


:is(.button, button) {
    display: inline-flex;
    flex-direction: row;
    flex-wrap: nowrap;

    gap: 0.5em;

    place-items: center;
    place-content: center;

    min-height: 45px;

    padding-inline-start: 14px;
    padding-inline-end: 14px;

    font-family: var(--font-secondary), "Open Sans", sans-serif;
    font-weight: 900;
    font-size: 13px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    text-transform: uppercase;
    text-align: center;

    transition: 150ms transform ease-out;

    border-radius: 4px;


    * {
        pointer-events: none;
        user-select: none;
    }


    .icon,
    i {
        font-size: 1.215em;
    }


    .text,
    span,
    div {
        display: inline-block;
    }


    >.container {
        transition-property: filter;
        transition-duration: 170ms;
        transition-timing-function: linear;
    }


    @media (hover: hover) {
        &:hover>.container {
            filter: brightness(115%);
        }
    }


    &:active {
        transform: scale(0.9);

        .container {
            filter: brightness(125%);
        }
    }
}


@keyframes glasium-shape {
    0% {
        transform: translateY(calc(100% + var(--size))) rotate(0deg);
    }


    100% {
        --translate: calc((100% + var(--background-height)) * -1);
        transform: translateY(var(--translate)) rotate(var(--rotation));
    }
}
